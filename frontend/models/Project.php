<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "project".
 *
 * @property int $id
 * @property string $name
 * @property string $description
 * @property int $user_id
 * @property string $created_at
 * @property string $update_at
 *
 * @property User $user
 * @property Task[] $tasks
 * @property TaskContainer[] $taskContainers
 */
class Project extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'project';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['description'], 'string'],
            [['name'], 'string', 'max' => 255],
            [['parent_id'], 'integer'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'user_id' => Yii::t('app', 'User ID'),
            'created_at' => Yii::t('app', 'Created At'),
            'update_at' => Yii::t('app', 'Update At'),
            'parent_id' => Yii::t('app', 'Parent project'),
        ];
    }

    public function beforeSave($insert)
    {
        if ($this->isNewRecord) {
            $this->user_id = Yii::$app->user->id;
            $this->created_at = date('Y-m-d H:i:s');
            $this->update_at = date('Y-m-d H:i:s');
        } else {
            $this->update_at = date('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTasks()
    {
        return $this->hasMany(Task::className(), ['project_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTaskContainers()
    {
        return $this->hasMany(TaskContainer::className(), ['project_id' => 'id']);
    }

    public function getParentProject()
    {
        return $this->hasOne(Project::className(), ['id' => 'parent_id']);
    }

    public function getChildProjects()
    {
        return $this->hasMany(Project::className(), ['parent_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return \app\models\query\ProjectQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\ProjectQuery(get_called_class());
    }
}
